version: '3.8'

services:
  postgres-test:
    image: postgres:15
    environment:
      POSTGRES_DB: resource_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./database_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d resource_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  redis-test:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - test-network

  resource-server-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    environment:
      - TEST_DATABASE_DSN=postgres://postgres:password@postgres-test:5432/resource_test?sslmode=disable
      - REDIS_URL=redis://redis-test:6379
      - SERVER_PORT=8081
      - GO_ENV=test
    ports:
      - "8081:8081"
    volumes:
      - .:/app
      - /app/vendor
    working_dir: /app
    command: ["./resource-server"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - test-network

volumes:
  postgres_test_data:

networks:
  test-network:
    driver: bridge