FROM golang:1.24.2-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git curl make

# Set working directory
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o resource-server ./cmd/api

# Start fresh from a smaller image
FROM alpine:latest

# Install ca-certificates for SSL/TLS connections
RUN apk --no-cache add ca-certificates curl

# Set working directory
WORKDIR /root/

# Copy the binary from the builder stage
COPY --from=builder /app/resource-server .

# Copy test fixtures and configuration
COPY --from=builder /app/test/fixtures ./test/fixtures

# Create a non-root user
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Change ownership of the application directory
RUN chown -R appuser:appgroup /root

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8081

# Health check
HEALTHCHECK --interval=10s --timeout=5s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8081/api/v1/health || exit 1

# Command to run the application
CMD ["./resource-server"]